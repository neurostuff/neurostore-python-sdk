# coding: utf-8

"""
    neurostore api

    Create studysets for meta-analysis

    The version of the OpenAPI document: 1.0
    Contact: jamesdkent21@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurostore_sdk.models.point_request import PointRequest

class TestPointRequest(unittest.TestCase):
    """PointRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PointRequest:
        """Test PointRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PointRequest`
        """
        model = PointRequest()
        if include_optional:
            return PointRequest(
                coordinates = [
                    63
                    ],
                space = 'MNI',
                kind = '',
                label_id = '',
                image = '',
                values = None,
                x = 1.337,
                y = 1.337,
                z = 1.337,
                entities = [
                    neurostore_sdk.models.entity.entity(
                        label = '', 
                        level = '', 
                        analysis = '', )
                    ],
                id = '38jobTomPDqt',
                public = True,
                analysis = '',
                cluster_size = 1.337,
                subpeak = True,
                order = 56
            )
        else:
            return PointRequest(
        )
        """

    def testPointRequest(self):
        """Test PointRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
